def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 30
ext.build_versions = build_versions
ext.major_version = "0.0"

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [
        gradle                       : "4.2.0",
        kotlin                       : "1.5.0",
        kotlin_coroutines            : "1.5.0-RC",
        kotlin_viewmodel_ktx         : "2.3.1",
        kotlin_core_ktx              : "1.3.1",
        kotlin_lifecycle_livedata_ktx: "2.3.0-beta01",
        kotPref                      : "2.12.0",
        arch_core                    : "2.1.0",
        lifecycle                    : "2.2.0",
        support                      : "1.3.0",
        constraint_layout            : "2.0.0",
        junit                        : "4.13",
        gson                         : "2.8.6",
        firebase_crashlytics         : "17.2.2",
        firebase                     : "17.5.0",
        room                         : "2.3.0",
        timber                       : "4.7.1",
        google_gms                   : "4.3.5",
        hilt                         : "1.0.0",
        android_hilt                 : "2.35.1",
        navigation                   : "2.3.5",
        input_mask                   : "6.0.0"
]

def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
deps.support = support

def room = [:]
room.room_runtime = "androidx.room:room-ktx:$versions.room"
room.room_compiler = "androidx.room:room-compiler:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.reacive_streams = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def navigation = [:]
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
deps.navigation = navigation

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def hilt = [:]
hilt.core = "com.google.dagger:hilt-android:$versions.hilt"
hilt.compilier = "com.google.dagger:hilt-compiler:$versions.android_hilt"
hilt.gradle = "com.google.dagger:hilt-android-gradle-plugin:$versions.android_hilt"
hilt.android = "com.google.dagger:hilt-android:$versions.android_hilt"
hilt.android_compilier = "com.google.dagger:hilt-android-compiler:$versions.android_hilt"
deps.hilt = hilt

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
kotlin.coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
kotlin.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.kotlin_viewmodel_ktx"
kotlin.core_ktx = "androidx.core:core-ktx:$versions.kotlin_core_ktx"
kotlin.lifecycle_livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.kotlin_lifecycle_livedata_ktx"
deps.kotlin = kotlin

def common = [:]
common.kotpref = "com.chibatching.kotpref:kotpref:$versions.kotPref"
common.kotpref_liveData = "com.chibatching.kotpref:livedata-support:$versions.kotPref"
common.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.common = common

def firebase = [:]
firebase.analytics = "com.google.firebase:firebase-analytics-ktx:$versions.firebase"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics-ktx:$versions.firebase_crashlytics"
firebase.auth =
deps.firebase = firebase

deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.gradle"
deps.google_gms = "com.google.gms:google-services:$versions.google_gms"
deps.input_mask = "com.redmadrobot:input-mask-android:$versions.input_mask"
ext.deps = deps

